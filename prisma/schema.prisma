// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// 用户模型
model User {
  id            String         @id @default(uuid())
  email         String         @unique
  password      String?
  name          String?
  avatar        String?
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
  preferences   Json?
  comments      Comment[]
  favorites     Favorite[]
}

// 城市模型
model City {
  id           String       @id @default(uuid())
  name         String
  description  String?
  province     String
  imageUrl     String?
  attractions  Attraction[]
}

// 景点模型
model Attraction {
  id           String       @id @default(uuid())
  name         String
  description  String
  openingHours String
  ticketPrice  String
  contact      String?
  address      String
  latitude     Float?
  longitude    Float?
  imageUrl     String
  category     String
  rating       Float        @default(0)
  popularity   Int          @default(0)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  
  cityId       String
  city         City         @relation(fields: [cityId], references: [id])
  
  media        Media[]
  comments     Comment[]
  favorites    Favorite[]
}

// 媒体模型
model Media {
  id           String     @id @default(uuid())
  type         String     // 'image' 或 'video'
  url          String
  thumbnail    String?
  title        String?
  
  attractionId String
  attraction   Attraction @relation(fields: [attractionId], references: [id])
}

// 评论模型
model Comment {
  id           String     @id @default(uuid())
  content      String
  rating       Int
  createdAt    DateTime   @default(now())
  
  userId       String
  user         User       @relation(fields: [userId], references: [id])
  
  attractionId String
  attraction   Attraction @relation(fields: [attractionId], references: [id])
}

// 收藏模型
model Favorite {
  id           String     @id @default(uuid())
  createdAt    DateTime   @default(now())
  
  userId       String
  user         User       @relation(fields: [userId], references: [id])
  
  attractionId String
  attraction   Attraction @relation(fields: [attractionId], references: [id])
  
  @@unique([userId, attractionId])
}
